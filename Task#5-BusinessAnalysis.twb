<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.18.0727.2040                               -->
<workbook original-version='10.4' source-build='10.4.10 (10400.18.0727.2040)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.0tuoc9t0joux9c13q21c815jcwiw' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.0qe78km16ritp71bloecc1euy9gg'>
            <connection class='textscan' directory='Data/Desktop' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0qe78km16ritp71bloecc1euy9gg' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='false' value='&quot;Desk Supplies&quot;'>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Office products&quot;'>
            <value>&quot;Appliances&quot;</value>
            <value>&quot;Copiers&quot;</value>
            <value>&quot;Machines&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Category,Sub-Category)' hidden='true' name='[Action (Category,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[City]</field>
          <field>[State]</field>
          <field>[Postal Code]</field>
          <field>[Country]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.56639' measure-ordering='alphabetic' measure-percentage='0.43361' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sales and Profit by sub-category and products ' type='sheet' worksheet='Sales and Profit by Category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sales and Profit by sub-category and products ' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Region wise sales and Profit of Superstore' type='sheet' worksheet='City wise sales and profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Region wise sales and Profit of Superstore' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='City wise sales and profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0tuoc9t0joux9c13q21c815jcwiw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tuoc9t0joux9c13q21c815jcwiw'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' included-values='in-range-or-null'>
            <min>-9623.0</min>
            <max>62036.98369999999</max>
          </filter>
          <slices>
            <column>[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]</column>
            <column>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]</column>
            <column>[federated.0tuoc9t0joux9c13q21c815jcwiw].[Latitude (generated)]</column>
            <column>[federated.0tuoc9t0joux9c13q21c815jcwiw].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tuoc9t0joux9c13q21c815jcwiw].[Longitude (generated)]' field-type='quantitative' max='-6854538.8773503331' min='-14824462.712664563' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tuoc9t0joux9c13q21c815jcwiw].[Latitude (generated)]' field-type='quantitative' max='6202901.5499999085' min='2878025.348764522' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' num-steps='6' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:City:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:City:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:City:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' />
              <size column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Sales:qk]' />
              <lod column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tuoc9t0joux9c13q21c815jcwiw].[Latitude (generated)]</rows>
        <cols>[federated.0tuoc9t0joux9c13q21c815jcwiw].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales and Profit by Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Sales and Profit by Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0tuoc9t0joux9c13q21c815jcwiw' />
          </datasources>
          <datasource-dependencies datasource='federated.0tuoc9t0joux9c13q21c815jcwiw'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]</column>
            <column>[federated.0tuoc9t0joux9c13q21c815jcwiw].[Action (City)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4722652435302734' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Category:nk] / [federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Sub-Category:nk])</rows>
        <cols>[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales and proit by region'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Sales and profit by region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0tuoc9t0joux9c13q21c815jcwiw' />
          </datasources>
          <datasource-dependencies datasource='federated.0tuoc9t0joux9c13q21c815jcwiw'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Sales:qk]' included-values='all' />
          <slices>
            <column>[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Sales:qk]</column>
            <column>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Category:nk]</column>
            <column>[federated.0tuoc9t0joux9c13q21c815jcwiw].[Action (City)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' field='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]' value='68' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' num-steps='6' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' />
              <size column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Category:nk] / [federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Sub-Category:nk])</rows>
        <cols>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='scatter plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Comparing Quantity and Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0tuoc9t0joux9c13q21c815jcwiw' />
          </datasources>
          <datasource-dependencies datasource='federated.0tuoc9t0joux9c13q21c815jcwiw'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]' />
              <lod column='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
                <format attr='shape' value='circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Sales:qk]</rows>
        <cols>[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Quantity:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Region wise sales and Profit of Superstore'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Region-wise Sales and Profit of Superstore</run>
            <run>Æ&#10;</run>
            <run fontsize='12' italic='true'>Select the region to see sales and profit of particular region</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='SampleSuperstore' name='federated.0tuoc9t0joux9c13q21c815jcwiw' />
      </datasources>
      <datasource-dependencies datasource='federated.0tuoc9t0joux9c13q21c815jcwiw'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='8000' id='14' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='9000'>
              <zone h='90000' id='3' type='layout-basic' w='82400' x='800' y='9000'>
                <zone h='45000' id='1' name='City wise sales and profit' w='82400' x='800' y='9000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45000' id='10' name='Sales and Profit by Category' w='41200' x='800' y='54000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45000' id='12' name='Sales and proit by region' w='41200' x='42000' y='54000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='90000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='9000'>
                <zone h='15875' id='6' mode='radiolist' name='City wise sales and profit' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]' type='filter' w='16000' x='83200' y='9000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8625' id='7' name='City wise sales and profit' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='24875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='15750' id='8' name='City wise sales and profit' pane-specification-id='0' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Sales:qk]' type='size' w='16000' x='83200' y='33500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='City wise sales and profit' pane-specification-id='0' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' type='color' w='16000' x='83200' y='49250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='15875' id='11' name='Sales and Profit by Category' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]' type='filter' w='16000' x='83200' y='57375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='13500' id='13' name='Sales and proit by region' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Category:nk]' type='filter' w='16000' x='83200' y='73250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Sales and Profit by sub-category and products '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>Sales and profit by category and Sub-category</run>
            <run>Æ&#10;</run>
            <run fontsize='15' italic='true'>Click subcategory to get product details</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='8125' id='8' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='89875' id='5' param='horz' type='layout-flow' w='98400' x='800' y='9125'>
              <zone h='89875' id='3' type='layout-basic' w='70300' x='800' y='9125'>
                <zone h='37028' id='1' name='Sales and Profit by Category' w='70300' x='800' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='52847' id='7' name='Sales and proit by region' w='70300' x='800' y='46153'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='281' h='89875' id='4' is-fixed='true' param='vert' type='layout-flow' w='28100' x='71100' y='9125'>
                <zone h='8125' id='6' name='Sales and Profit by Category' pane-specification-id='0' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' type='color' w='28100' x='71100' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sales and Profit by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Category:nk]</field>
                  <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[Sub-Category (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Technology&quot;</bucket>
                  <bucket>&quot;Copiers&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Category:nk]</field>
                  <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[Sub-Category (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Technology&quot;</bucket>
                  <bucket>&quot;Machines&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Category:nk]</field>
                  <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[Sub-Category (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Office Supplies&quot;</bucket>
                  <bucket>&quot;Appliances&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Category:nk]</field>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Country:nk]</field>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]</field>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Sub-Category:nk]</field>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales and proit by region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[:Measure Names]</field>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Category:nk]</field>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]</field>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:State:nk]</field>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Sub-Category:nk]</field>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Sales and Profit by sub-category and products '>
      <viewpoints>
        <viewpoint name='Sales and Profit by Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales and proit by region'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='scatter plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Country:nk]</field>
            <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='City wise sales and profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[none:Region:nk]' type='filter' />
            <card param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='Region wise sales and Profit of Superstore'>
      <viewpoints>
        <viewpoint name='City wise sales and profit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0tuoc9t0joux9c13q21c815jcwiw].[sum:Profit:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sales and Profit by Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales and proit by region'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='City wise sales and profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region wise sales and Profit of Superstore' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales and Profit by Category' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXRc2X3f+Xm171Uo7CB2gFgIAiS47+xF3a3Fki1ZlmQ5UiwnjmM7Mz4+
      kzn5a2bO5Djj4yRzkijjJG47tqJdcrS01K1u7mQ3dwIEse/7VoVC7XvVW+YPsNmWuskm2ARQ
      RbzPOd0HAF+9+r5X9X33/u7v3t8VFEVRUFHZpmi2WoCKylaiGkBlW6MaQGVboxpAZVujGkBl
      W6MaQGVboxpAZVujGkBlW6MaQGVboxpAZVujGkBlW6P7h79IkkQmk9kqLSoqm877DJBOp7dK
      S14gyzKxWAyHw7HVUt6HoigoioJGk3sNuyzLADmnTVBng64PURTxdF/DqeTeg+LdT1IQtlbH
      B7FebZa2Q2jtro0TdB/dw/4hEwtz6fI50BfTefwwJTbTI0+UTYTxJ8GoEXE43Wg1T/9TiK3M
      cGdwGktBGXvbWzBqP/g9AoEALlcBmg3QACAn40iZ6IacW2UNRRIBkMUkXVffpubgK5RaJCb6
      rpMuaKet2gVI9F5/B1fLQWrcVhRFZqzrAtdGo3z6N34NfWiSH795lUMf/y1aS3Sce/0nWBpP
      cHJPHe9+Mx5qAEURqGruoKG6Fr0YYc4vU2ZKEEjokNNRvP4wxW4b3rkZREcVe+sKycYDXLtx
      HYuzjiNHG8gIheizfgx6A6FQjKVgiuYyPXeH5mnZe4DyAsu6bkrUE6b5+DHE2XEWvSFqSmyI
      koLeoAdZIitK6PQGPJ5lHA4nigIaQSCbzaLR6UESkQC9Xo8sikiKgkGvR5ZERBkMeh2SmEVS
      BAx6HUIuPkq3Gd6pUXRCnNkw2FNeEtkIi0sx2qqdhBdHOXezh+edzdS4rYgZD11DaT59qpbL
      N7rResb5tc9/np+//hb6BhPGhlP4R97BW1tBmdMIPMIAIDM3NsCKN0RnnZWFRBluV4AVv5HA
      0hwdhw6xPN5HbcdhPGMjxOIGQqKO3Xs6qW1oJb3cx4rOiSXmxWq10Tfi5/nTHbz9i58gGS30
      9E9QeqpjXcNQihzl5qUr2A0W9u+v4tbbV0gJYCuqQx+dI5CUMLmqcBoyzIwOkrUWY4rPM+GJ
      U93USmS8m5lQks4DJ5kbvEVaX8TJ463cPPc2IRH2dO5hYqAHwVXNi8c60T+khVHZPMqb9mIS
      vYwDlsIKOvRhlodBFtN09U5x6sT+B09zra4IqzzG3/1onJOf+gJ67Tzf/Ku/pbzzGPGQn9bD
      NYRjM4TSCcpYM8Ajvn9a6nd18tyJQzhtVmIrC0xMzpIFCsurcNuMYLDgshgwGPQPXqWk48zM
      LCJqdfgXp5mZ9yADVfUNmHQanIWlNDa3076zYt03Q6N1cvLll+ioLcbvmUUuqOP0yZOkA3Ok
      dA5Onz6FMRMkm04xv+ynsNBBJKrh6OnTNBZpiAtOSgssrAZT1NbWYCFFeHUBT9ZCbVUlJouV
      2ppq9Mk4cUletz6VzSPpGeati9f40fe+z5uXbpGWQIzPkXAc5o+/+gnGx/uZWdLyz//0XyDN
      jyGb0vh8cTyxMFat8cF5HtoC6M1mKsvL135xVLG7UkLSl1DgKnhwTG1tLRqNhh11degNOkwO
      BX2pg/nlCNbSndSn5xGqOikqsOOQdQhaHXs797LgCWC2mFnv81VvUbhx9iwmg5W9BzpRJvu5
      cGmane0H0YanuXjxClVNe7BqUuzeXcDI5BKVNQXcunSBHTtbMQkp0kYnhTYDyWCMrKDHXFhP
      S7GXYCROGZCMx1AMZgwbFD+orI+JG2/xwzNXSDnmML18gKtv/Yz5sBbTl/4J/+7f/zmLU4Ok
      tOXcOfsmLadPUJC+zKvfS3P0lc9g9fXy1//ff6Fqz0la9hTzg++/iqX2AEdd5gfnV0eB1oko
      iixdPYtDDYI3FNuhF9G5ih7z6AzDgzM079qJZp1xm2qAdSKKIsFVH4Vu91ZLeR+yLCPLMjrd
      I0K7LUKWJBRAq9U+1vGCTo+wCTmD3LtT+YBWh8Zg/PDjNhtZRpEkNHr9hx+7ySiSBIqCJsfM
      mVtq8oR3pi8TmPJttYz3obCWDV5vN2AzeLejkWtDy3llAEWRWV2aIyoaKCsuQKfXY9Bv/iVM
      +scYjg5s+vuqPH1ya2LGhxCeG2bUGwc5w8rSIoFY8gOPm5ubRlYjG5XHIK9agClvgsMHD6IX
      YGVmiO4bb5NO63nx088xdvMKvqSBA4cPE/QHKDUkOTcQoHpHCaGlaVLGIp4/0olel1eeV9lg
      8soAFq1CTJRx6QCNib1HTqFZmCYixghHsiTCIZbDMTLpNLKkp6JpH+0VAneDyyQTKVKKQu6F
      hypbSV4ZoKG5lkvnz6C1uqivLMem1SAYjbzb27E6XJj0GhSTEY3eiNNsQZbiyIqMIkrI6oiv
      yq+g5gHWiSiK/Idzf6EGwc8IqgHWiSiKjMwNobfnXmdKkWVkWUGre7xk02Yi359bpdHmVgyW
      V12gXKHUXk5xcfFWy3gfsiwjSRL6HEyESZKEoig5l6XOLTV5wkRolLFM7nWBcmFJ5M6CVkos
      ZVv2/uslrwwgZdPEk2k0Wj0Wq3ndSQxFyiIJej7qSOhwoI8F//RHO8kzis3goMRShiJnCQZC
      6MwOHBYDmVScjKLDaVv7ykmZJL5AGACr041ZIxKMJHC5CxGkFMFAGMVgoqjAuaGZ7bwygHfw
      LoNJKLIVs7u98UMNEPRMo3HV4by/mlNZHWFEaGd3CUCG+Wk/FXXl5F6POf8Z7brItQEvsqTj
      17/0a/Sc/T7Lxj387q8dBiAdWuTs2esEFybZceoLmGbfwRtXKGg8TqttljNXl6hobeWzL59E
      s4EfUF4ZQBB0OArsuKwOvLNj2EsaWJwdp6HCRu/QMqaiQiTvMoFEmLKmoxSJSQRjkKs37qBx
      VXOwTGGk9x2WDQoHj+4nkcywMjXM+PwyGRwcP9zMQFcXgVCKXSefY6XvKlGNk4OHDmHNvW51
      ThOLJSksK8PkH6DfZ+RjH/8UZ7oCD/7dUtLIV79Swzvnz9Gyx8n11f383hd38+M3r5AUg7jr
      d7KvvQ3dBq/LyK2Q/EMRMJnNGI16EtEIGVEhFAohZeIo5nLaGopRjEU898IJsqEAyUiIlCQj
      KxoEYW2wq7btIJ3NxURjScKhGIlEhtZDJ2h06lgMrVBcvYf9jSUkRQlJktHptUiitMXXnX90
      Hv8YTZXFaNFgMn7wczbinSFl3kGRTYciy2v5HAEa9j7Hrkobl8++RTQtbqjOvDKAoDFSUVND
      RUkBRo1E940rjM76EDRa3IWFaAXQG41otVreHW1TBAGdoODxrCDJCiajCY1G+95qNEGHyaBD
      q9ViMZgYH7pN1+AUsiKj0+kJrvqIpzb2Q3gWCXunuX79Gr2xUtodfr7/jb/j5z/+Lm/dGqWv
      t4+sIjHaN0pzRxuCUIwx1c3Xv/5f0Tt3MDvcx51btwllNeg3eNg0r/IAiiyDRoNw/2dRkhAE
      DVqtgIKARgBZVtBoBGT5vUI0sijCg+M0CMiA8MtTdBWFVNzPzWu3iWb0HH/5eZw6UBDQabUP
      pvGKosg3u19lQVGD4A/i1xu+xJ7i/SiyRDqTQas3otNAMpFAVsBgyHLh4iAff+U4siSj0a09
      jGRJJJOVMBgNoEhkMlm0OsP9e79xevPKALmAKIrcm+0GW+4tmlcUBUWW0TzmqquNoM7RSKH5
      /TkSNQ/wDFHjqFcTYc8IqgGeAGVlESnk3WoZ70ORZVAUpC1sAR6GnKPaVAM8AdKdtxEXJ7Za
      xkPJvc7Ze+SatrwaBeq/eZ5v/e03eOvKdcLJ94YmU8FpppbeXR0Wovv2OGpgo/I45FUL0H7k
      BSS5i+Zjh1CCy1y5NoC9qoXWogwjPTdYXCjiQGclWVEiE/dz5/Y9CmraqHMr3OkepLihg121
      JVt9GSo5RF61AP+QTCaFrCjcvdcLaKjddYBGl44lfwiAgdvXCSYzTAwM4PH7kXQWzIbc6n+q
      bD15a4Cw34e1eAcuqwEA39IMs74gZuNavR67s4DSHdW07mrE6SykwKJhdEIdu1f5ZfKqCwQC
      TR1tGIGKhjZ0vhB1NVUYbQZ21vjQmmsodllxdhRiNtWyvLyCzuLEbtVRUlZBXYHa/VH5ZdRE
      2DoRRRH/1fO407GtlvJ+7q8H2IySguslVwtj/ZIBkskk4XB4K/XkPLIsk0wmsVqtWy3lfSiK
      gizLj11/czNR9wh7RhBFkYWVeewu21ZLeR+ycr84rjb3eraSvDZsrf2Vyf16rQGH0bkVkoBH
      xgAKyWgQrz9KUVkFVqOOiN9DSmPDoc8SSgqUlhTkbxT9EfjFxE+ZzoxttYxngp3uFv7Zvj/Z
      svd/qAHEZIS7PQMUFrvp6u7j2OFOhoYGqW3rZKR3GFdDK/Oz01RV17Fpe0koMqO9txEKG2mq
      enjt+JRnmEV9I4VSGGtJkVoMKy/IcuvcG8yIhXzxEycZ7z7L6xd72f38b1Ia7uXM3QmC8Sxf
      +6M/YWeJlfj8bf7tX1+gtK6Wz750lLd+/hqhjIHPfPl3WLz9Bl0jy3Q89xu8uL/+kRuxPNQA
      8fgq7h27aGkoQrnXzexYL+MzS2CyMDY0QbOjnAKzhBj38fbVLsyF1VQWyEzMeCmsbmFvU+VT
      v0WyLBJNywhBH0pVAUuT48ythGnu2IccWmRm0UtJbSuF6ShxRcGUjGNyWRgd6CdrLqGjuZKF
      8TE84RRNu9vRRJcYmlqhtXMfgak+oho3bQ1ljA70kbWUsbe5+qlfg8rD0LCz4xChkUkgxsiE
      yO//yf/K66+9wUu/9TnaT0U5c+4WO9xrGytGPct88g//FYfLNUjZDF/+p3/I1PUfM7sisu/4
      JzlyKsSbV70oPKEBNBo9kphBURREWaayroN9sp7duxvQi1b2dDQwNtCPf3aS+mMvU2dLc/4n
      v0C02YlEN2b3lGx4Bo1rJ5boFMF0Fo8vTmtrPQP9fbi1ElVNTcwOD2Ep0YBBYcXjxVleQDDg
      Y3J2irLqV5hbjrKzrhTv4jirqxl272pCXhni8p1x9DoZvdjGxHKI1vZaFFj3Nk4qT4oWt/v+
      vsByGo2tEIveiMGgAxSWp0ZxVO3Eolv7RGSTnUvf+n+54SzhH33lHzFw5q8ZXTXzcocD0nOc
      757kxKnTH9pFf6gBbI5SUkPvcGaqF3tZAxaj7v5cbgH9/ZLkOp0Od0Utl6+eZbmoirLaYuZX
      UpiMG7N5xOTILMvxWeRkAqWkCq1Wi5xNo2h0CFoBpCwyml/qkoWCHlzlbexhmiwKBUWlOO1O
      YuEEWkFAkkQUGRr3HKat0o5er8PptNFzr5faqpcwbMiVqLwfkVWPl2AggD+qRYhOMDRuJxiV
      UaQUQxM+Dr9yABSReEIioyvii7/92wx3XWZmcoqqvZ+kMjZE19V7aJIzHDxxHEHMomB45EMs
      r0aBVldXKSoqQsokCCWTjNzuRldQQtuedqbvvENUb6exaRdubZyotgAlFsTutDA2NIzOXEhl
      QznZWBabWU9SkpBjq4zN+mhq34N/qp9g1kRz4w5mxsfQOHawq778fRpEUeTV6/9ZDYKfEu8F
      wTF+8Z2f4pcVipsOcKrRytmLdzn0yicoNcksrYaoqignNneHc1MOPr7Xztlz71DScoi9NRYu
      X7hC0lTGy6f3c/3sT/BGFcrr9/P88V2PrPqRVwb4ZWRi0SRWuxUBhXg0jtlu2/BRKVEUea33
      71klB9cDAChKziWbAJT783OFX3keVzqq+dTOzz32eeLhMDqrDeNTKv+YxwbYGkRRJBgMqivC
      1kmuLol86ANTkUUmBrq4erOH2OOWpkhHWA7En5Y2FZUN56F2jAZmCYqF7G22kc2KiFoBrVZA
      lgFFIitKaPUGdMhkRBEEHYZUkGmvHltmmaS9gUJjlqyoYDAakLIZJEXAaHx0UJIPXFl+E//q
      0lM8o8AftP6rp3g+lcfloQaw2IvJBm7QlSjmwP5Kum6H6exwMTQVRheZYkXRI+Fkf4nI9cUM
      einNobY6QE98ZYWEaQfjN87jCaVp3r+fuZ4eDAVVnHj+IKYnVasozI33o7hqqSlxPPizlE2j
      aI0fuebn4yIjIykbUSxLZnbgFq9fuEnTsU9RFO7jfM80GcHI73ztn1FbaCIZ9nL14nkan/8d
      qs1x7t08R7rkKEebC7jx5o/oWZD47Bc+x44Cywboe/Z46FdG0BjoPP4ie8p1THkiyIqMmE6R
      lcHsKOPI8ZM4DSJoTHQcPkZLbRGpRObB67PpOP6oSG1dLRajlYaGGoxKmHDiycUqsog3EMG/
      soyCTCIeY3lpmbHbb9M1Pkdig6uIbTwSgrmCf/KHf0B4boDdL3yef/mnf8zRtibcjrWh5VQ8
      QV2lk5U4iJk0xeWFRMMZ0slFFuMVfOXTe7l1Z1hdEvqYPNQAYjpG97XL3J2NsaOwHKM0z63+
      aax2K/HgAlcuXMJaXI0gJ7l95QJLER1FpW4KbCaMjgJcdif1lUUEghE0AsTjMbJaC5aPEJ+J
      8SV0zjpMqSjRbIa7V6/ijaSQZfm90np5jZ6KChdd16/T2nkMnQDBxXGE4kYc+rWOY0FFHUW2
      tZtotLupLl8Lxg2GEkypYf72799gasabc4vPc5WHdoGMtiJOvPCxB78Xnnrv5xWjRGtlJQYg
      sSLy4scO476fMWq1A7gBKD14kt33X1Nb/tEXo8yNjDPlExFSMXQVNThLa9jVXEtIG8RcUoXF
      kO9T87L03LxDVcdRqgutIIv0D8yz56VPfugrBZ2ZF3/zK+ybvMONVZda8foxeaIxqZLK9+b5
      WEoq2azepqG8mc8dqkJMhPHFMzjLihEEAXvZDvq6r+M4cJgiWx7nbqUs3vlJLnX1YKvcxT/9
      3HMU17XgNmhIzPXw5oyOvYYlfnS5G8k8i/nFQ1w79xbBlIDB/CWkiQtMJd184TdPbvWV5A1q
      HmCdiKLIGyN/T9DwNBNhAr/b9OgpwQG/F5PZjeURfUg1D7B+VAOsEzUR9mTkqgHyvdOsovKR
      yC075gk/7vufzKRyr8RKri48h9zVllcGiK5Mc7t/Gqu7jM6OVozah9zMbITVhIki58YExKvx
      VWbCuWcAlfWTV12guCdK26mT7LDLLHpCzM1MkBUl0uk0qfT9xTvZDMmoh6XVFLKYJZlKIckK
      kiSRSaeRJIlUMklW3fZIhTxrAWQ5ws2Ll7AbLOw/1MzM4DA2McLl2Rj2TIy2g0cY77uLIEcx
      VxfRc+MCsytRKlqPYA6N4EtbqC8z0D22QkvHAdrrSrf6klS2mLwygEbr5OTLx5FnxvCHQvf/
      qmfvkVMUrPbjDSQo2bmLnY4E/R6JpdUQ1XU7sVn0iJlCTh7uRI56qQlniPiDyHWl+dUEqjx1
      8urz11sVbp89S//sKm6nA6fLjcFqx6IFvcVOYWkB8dlRrt2bwWY309JQR8AfRBE0uNxutIKA
      mEkRiSaw2m15PytV5aOj5gHWiSiK/MUv/pyBcN9WS1F5CqgGWCeiKOLxeXC9W8Egh1Dktcpw
      2hxLNgHIsoSikHNlG3PvTuUBRp0RmzEHSyOqmeB1k1tq8oSh4D3S6cdf+llgLOJg8YkNVKTy
      pOSVAVIRH9OLq2j1Jmpq6zB+mHpFIhRJ4HLan6oOT3IBX3bxsY+vsFQ/MEAssMxSRKGptgIp
      HeNedw/Gsp3sri97cHxgcZyovgxtYILh+VUEo5UDBw4i+qcYmFpl39HjOPJ40msukVejQMHp
      ObJWKxaL+fHqkUpphsZyKWObpvduHz0DA4DCrQs/ZyWjRye8t3xFTgV5+7Vvc2bAg8nqoKio
      gIWRfgK+KX5+sQ+b3YiU7wvfcoi8agEUJcXM+DghiwNdNsW9sUHSEYmDLx4ntBKn0iUQFDX4
      Z6bwJzO0tu8DIOyZ4ta9UbJYOX5iF3cu3SAj6Nh9+BCRyWE8sTSNre0sj/UQ07o4cXg/lg9t
      Xp4EI8efe44zV28AMaYn/cR0IazuclrWrpDRe9007j9OPKuhqKoBi3Ueb2gf2pVlkikvd3oV
      GnfvRy3a+HTIqxZAo7Fz6PRpjh3ch1mjpXX/MV7srCWldZCJ+lnyBTBLEYYW/MiiRDKdAsC7
      GmDvsRc5VqdlOihQ3dLJS0dbCC5OcW96BVmSSGVE7FYLSjpDUtqMaRJanMVVfP6rX2X61iWS
      QCa8wHd+9HN+8frrvPHam8REifGeezTs3YvBaKD18Ct8+ZNNvPHz25ugb3uQVy2AoEtz88IF
      HBYnrdU16HVaNHojeq2eqkIY8NtpbiqhyjVNWqPHqNdiMhooK3Zw+8ZFsho7R49IXD1zk2mH
      m72H9pHwrRJDh16nIS1LKLLAxg0MR/jO11/l9vwiK2kzx1scfPvVVzFW7iY928uUXMOf/bv/
      BCv9/GzOiVlOsCK4ealAj2LdxfXv/ZC/uZjg+c9+baMEbju2XR4gk4rgXU1TVflkC1pEUeRH
      g9/Cp1tfEPy5uq8+/ABFYfjuTcrbj+AyPHnXRh0GXT/bzgAfFVEUmfFOYSkwP/ZrjBojhaaN
      36FSNcD6yS01eYLTUECxJfeWRKqsn7wKgnOFYHyVhdUp0tnUVktR+YjklQGkTIpQKEQkmtjS
      wk+BqJe51XEy4poBsuk4nuUlgtHEg+JcipxlxeMhlsygKBIhvw/vahBZUUBRiIZDpEW1fNVW
      k1cG8A7do2t0lOnZZR42ULmyskwqtbmZornhu1y8eJEffud7+JJrfxu59iY/+cVbfPMHb+Bd
      muDMG2/x+nf/hnueDKnwEv/pP/4596aCm6pT5f3kVQwgCBpsdht2m42Yd5q7fePYK3bSaE9z
      Z2Se2sZmJvtvImncHDm5j8n+PrIGFx31pfSOjpIIJ+l8/iWiUz3MriTYte8gsfkBvEGBqioz
      I+PLNHYcoqFsffvW1rV34lmOsGQWMN2/o6Mhhd//2j9m8PyPiTma+PyXdtB96TJ2I/Te6Wbf
      ydPq7pU5QF4ZALRY7HYsJiMB3xKdR0/S03UHXVkre9p0TC4naGltw1Vaj7AygKluP+1OkUww
      iLt6F0d1Swz4YiTjWk4dP0A0BSspmc4jBxCjQTpadcx4VtdtAP9qgILyahTfBJ5QFkexHmMq
      xkoswcxKghb/BPfiAnUHTmGKj/CNK7dJx3wUt2jZ3fSKug/ZFpJXBrAWl2OvqMAGBLN2em53
      4SgpBTHG4PAsVa2dlJmT3Oy6zZ5D+0j33OKOvoC9TTWUGqzoKKEMO8mYzOWrd2jZs5+SHdVY
      DFqCqRBDo0vU7d6/bl2x5WnOXuyiavdxdgb6eGPaysdeOsU3v/Hf2XnqM1iTS7z2s7dRdFpe
      /tI/59/82Z/hWRhDNOxQv/xbjJoHWCeiKHJ35AaKIcOuqgPYzb/cWvhXFjDYy7GbN3/hh5oH
      WD+qAdaJWhrxychVA+TVKJCKytMmt+yYJ9zz3ySeCD3ymEbHLnYXrD+eUNlc8qoFSAQCvD/3
      qhAIBD7w+HQiRDCafuo6wtkg3uTiI/+LZsNr6hSJ2aHbDM6uArA8dof/8a3vMe2L/YNLUBi6
      dYH5YIawZ4LvffNb9M+sosgSve+8zg9/doF49qlfhgp5ZoDI4iJRABRkWUIU1yoNLCwsIkkS
      sqygKMqDnxNhDx5/cu3Y+33QzSYV8xPwepn1RYA086sKn3h+H7dudz04JhMY5cqVt+lfDnP1
      fBdHXnmJ3uvn8Q6dpz9ayQvH96BX179sCHllgPeQGb97jdde+5/cHfMhRn1cvXyRS9d6WJju
      5/XXfsbPL91em5YgJ7l69he8deYqkS2oB2q2l9DZ0YxWKwBGDhzYzezEHC0tTfcvJcP5y6N8
      +hOHASPVVXp++O1vg30H00MeQp4b/PTsTZJqLdMNIT8NIKYJpwXKy1ysLK+isxdz8vnnKbOI
      TE3PYSsqo9RhRQQQDFRVV2E3ZAjHtnrujcytdy5RtOsoexsqAIjNd3Hxdjf//Rs/4uL5txj2
      aviDP/pjxOAsjgI7h1/5CsdrjQyMP819iVXeJa+CYJ1Z5uaZMxSV12I1CAQyJkrcNqyChwvn
      L1FS20J7uZvugUmyZgcGowUrGuLBJBl0mD/CYpMnJbY6ybdf/S4zSQ0azW8wfPkG6btDlHWc
      os0Wo6TtOP/+L44RnbnNsNCKZe4d/u6//VdKmg/TeHQnP/7+Nwlqi/itz6uFfDcCNQ+wTkRR
      5KfD38Wvf/QTucN9iKMlLzz8ACXF8OAcjbt2on+sEhcfjpoHWD+qAdaJKIp4/R5c7kfPF9Jr
      DBi0xk1StYZqgPWTW2ryBIPGiFX/dIttqWwNqgGegIvjl/EN+7ZaxvtQFAVFAc1T6lK9i9vi
      5ssHvvRUz5kr5JUB0rEA854AZpub8lL341WH2wAGl4e45+/dmjffAqpclWsGyMToujdAOivh
      KK2hqczMwOAEJfWtVBY7HpTqivkXCWStWDIrjM77QGugqbWVyMI4UY2L9uZatFv14f0KeTUM
      GpicIizA4vQQS/7EVsvZlggCSCkf1+8McOOts/jTaS6ce4tEZm2IWcnGufqzb/KT2xMgCAgo
      jHe9w+D4CD3D86yOXufOVHiLr+I98qoFEDRGqusbSMoxUuFVrg2OEUmZOHF6H91vnyUpGtjZ
      eRxtYIyJpTBVzbthdZblqEjnwYO4LOrs+4+Ewcb+g0fovfQaL378BZJ9b3F1bBRXSSN6rQAo
      zI/04Go8TFFWT1HVTlwlRfhDGdqK9fzw6jRxN2TuTnKkMTfmSeWVAWQpzI1z59hRVkdzmcBs
      RiK+PIEnvp/S2l00VdjpmVtk6d4khiIX0Wgcs6zlwLED2PS5tTFDvqKIISbCVj7nlDkTUvjU
      pz/DzbffJp2R0ApxvvGtb2Ow2OkLFfLy4VYid69Tuf9FCoq0fPVrNaSWuzi/nDubi+SVAXTG
      Qk6/fAI3EPPNI8sydqcTLTITQ13MTBbSeuAo2pp5VuICRoMBs8aJUa9VS8k+JYKbiawAABCB
      SURBVGbudLHr1CkEQUOhIc0Pv/0tDEUNEBrjVqSE//Pf/jcITvCToQzFVrgTNfDJMhOp8Ao/
      /cH3WAgb+b0/Or3Vl/GAZyIPIKbTzHu91FVXb/x7iSL/+rV/s+2C4L/8wtcfecxo11Xcu49T
      bPrgR02u5gGeCQNsJqIo0jfdj8ace+MHsqKgyPJT34fLpDfRUtr8kc6RqwbILTV5QpWrUl0S
      +YygGuAJGF0dYmADFtp8VNYSYQoaTe61TooiowAaIbe05ZUBFFkilUoj6PQY9XqELYps7y7d
      ZiI1vDVvrvJUySsDzA52MxPKYDBY2d1UQ1JjotRp2WpZKnlMXhlAkmUs9gLq62pYGrhGtyfF
      wSOnwDfM7Gqapo59aKOLzC8HaWxtpL+nD5Orgr2tO+i7e5dIJMOe518kPN7NQlBmz4H9FNo2
      d8amSm6RVwaobz+AbWmeqaEBamp2cbDBxs5ShWtTTp4/Xs6twQWcSoDa9oNY0suIMizPDGGy
      aKlqOoDW008gusJA3wxWl5nlQEw1wDYntyKSD2FurI/RqTniaQm9UWCyt4uZFQUhNcvVGz2Y
      bA5MVhcum4lUJIykN2KzGLAZDQz13aF3fAGd3k5BoRW7y43DrH75tzt5lQeQpSzpjIhWZ0Cv
      E8ikM2h0BjSIZEQZg8EIioxGowVFIp3OotFpyURXuHa9i0TWxIufeRmLlCErKRiMxnXPShRF
      kf9y5T+oQfAzQl4ZIBcQRZFb49fJmtRh0PWgyAqgIOSYNtUA60StDfpkqJngZ4hMKk48nDvT
      68z2grVun8q6UQ3wBIS8syRWMlst4wF17SfRGFQDPAl5ZQDveC89016MZjdHjh7A/Bjqlyf7
      kApbEKJLlO6oRZdbXdCnjELPa3/JVQ7xp5+o5S//6rtg28GXf/e3cRsgG5rhr/7uR2Cu5rOf
      aePH33mDSGiJshd+n997vokf/M3/g7n1d/j1kw1bfSGbRl4ZwBcIUd+6l5oyN8mQl4zJheT3
      oqsoY673Jt64jn0HDhBdGGJi3k/t7gMYpCySDFoFkFJ037iB7KxmV7WDu129FNTupq2+7BlY
      L6AQXZnAo5RR4jIwcO0mBz/zZVpKnNjvhwR3b/Vy8tNfpLa0AIfNyv/yL1u5eektqjvrWRm5
      iq7mEJb05m4wuNXk1fOw7cBRlMAMN2504/H5iCYzhBaXiIoiksnNsd0VTMx6CcSznDh9nKXp
      sQev9S4vsTx4m1F/ksXxXibnPWQ1ZmwmPTwDwwCKlOXCmYsUlTjxLHvwJdOMvHOG737nb+me
      XNuNMiMmuXvlLN/7H6/Ss5ggE5rHrxRRakvx40sTVNnSeFZ8ZLe6guQmklctwPL8DJhdWOM+
      FASW5qYJzXto6+wgHvIxmY5hcteTCceZmpxE0ZqA9/rqBqudigo3OwosuGwWhHSKkbEJqssL
      874FUBAor6zAMzfN8pKB+s42vNooJYofKZVkySvTWF+HjzCWtIZsVmZseIydbYfRihlqa0qZ
      mJjCE5QRFbbNDpZ5NQyajodYXgliLSih0KplccmDzmDF6bLSf6+L8upmystKGOi6iqOkmrKK
      SnRyEvQWssk4FpsZ7/wCWZ2ZYpcV34oPS0EphQ7LY88sFUWR0XvXMAi5FQTrDKa1YdBMglAK
      il0W5scGCUg2qlwZ7kwkeflEO3Ojg4QEJ+3N1URXA1gKCx+UXs9m4sSTGlxO81PXmKvDoHll
      gIehyDJZUcRgWKv6kEmn0RuMGzJdWhRF5iaHsJpy54Ms2rETrU7/0DyAKKaRFR2GLSwMkBcG
      SCaThMO5U7MlF5FlmWQyidVq3Wop70NRFOQNWBL5NJDltcAi17LUz0QLsJmIosjc8jxWp22r
      pbwPRZaRFRmtNreesrBmAEVRcs6cD71TyWgAX3BtHyuHuxTXB0wbziaTYDKh/5C+RjIRx2Cy
      5Ew5vI/Kf770N9xYurvVMlSeAg9tj6RshqXZUSamPWQesj1PaGoKv/zhY2YTY4MPSud9JBSF
      sd5bjC/4P/q5foV0PEwkqe5Et914aAtgc5dRXxchKhVRYoee6+/gzyi0d+xlYbgLf8bCTpeG
      wbcvos8aOXRwF/fu3SUdS9Fy4iVCw9fwRhXq2vatnVCM8fa5myQx0LF/P4GJPhZCURwlLbi0
      CXbuamBqfIn65np0D2koZDlLJCUiBHwolYWEvbOMz/lp7uhgZaKfjLGY6mI9o2Pz1LbuQZ9Y
      ZmTWT+OuXWR908z5M+zes5vg3CjeuJbW1kZSUT++xQCF5TayejNiaJrJ5Tht7a2EF8ZYjMjs
      am3FYsitvqvK0+GxOotp3xSDS2GKbHq8i0sYiht4qbEa3/Agncf2opsZJpaSKKnbTas1Qn/c
      T0qo4aXnirgx4MGhheTyCLaW0xywhhmd6gdXHS8dNHLrRpCSSoWB4XnMNttDv/wAYmQWbUET
      lug0oZifwckArS3VRKf7CRtKaSgycefKeXxpmPanqDVFSVt2oNNkuNc3ir22mXR0iVmfTK07
      y9CMl/jkLSo7TiNHZvALMHrrJqKSISxZYbmPgob9W1aFWmXjeaQBNBoNGkXA4K6kyDiFVmfE
      VVTA0lgvZxeWaC5yYNFp0ej0aDQaDAYBjVaHTuuG5CXOXJigsnUf2lgSc1kNq1cucFmro23f
      fpYGujk/n0EwNOMqraWn/wr7XvzEI8VODM+wEJWRk0lkpxuNRotOp0MjCGh1erRaMNjLeO5k
      B4KsoCeLZ2ac4Vk/ew4dYmHiLmOeFtBo0GoVFAnc5fXUlLkIzgCyTEFlE3t2N6CgQ646xtTE
      JAsrRTTuyJ16lipPj60ZBZJS3Ltzm5VIgtq2I5gjU3iFIg60PLq0oc/no7i4GCmdIJiU0KZW
      GZn2sauzE+/YPdLGUmqKdQyNzFBS24xDDjC+GKG1vY3I/BiLUYF9nW34podYjmlp391MMhLC
      5XaTifpJ6pxkV6cYXwjS0NpOyjOKN2GgvaMV8/1ZdKIo8r9/9/9Sg+BnBHUYdJ2IosjX33yV
      0fDUVkv5QBRFQdiqgkmP4N2vWa5pUw2wTtQVYU9GrmaC1aENlW1NbtkxT/jXP/iPvDPZvdUy
      VJ4CeWUAWUzR332bkGLn4L49Dx2bT6VSGI3GDetvpsQM8bS6R9mzQF4ZYGmkH3NtJ60uHZBl
      ZdmHYnRQ7DIT9PlIyjpKS4pZXl6kuqaWkNeDqLdR5DCTSqdIZMBEinBKpqS0FIM2twIylc0n
      rwzgScC+UjsaYHmqn7mAhBQZJdO5h+nBSewWiIha4j4vhYY0Z68No9FqObKnjeH5JZqa2hjo
      uYS2uAlXYTGGHJuYpbL55JUByq0w5olQX6AnHE1SXtOGdiFEKKOhpLKWckucmczamtZEKEhx
      w24aikzYyFLT3E5deQFmaT/zC8v4AjFs5c4tviKVrSavRoHKmzvIzN7jZs8IFXU78YzcZk6o
      oN4uMdl3m96FJI2VRZSVVVC0sxNHfIG5JT86WwFF9rVVThG/l5hkpLAg9+bzq2w+z0QeQBKT
      hCMibrd9w99LFEX+t1f/b65P9Wz4e60X5f7/hRxc4Zyr2p4JA2wmaiLsyVATYSoqOUhu2TFP
      GPH30h/PvTyAApCrc4Hud4JyrQuUVwaI+WZZEZ3Ul7uIrs7jTZpprCr6wGP9AT+F7sIN0RHP
      RokR2JBzq2wuedUFii75GV2cQlFkFib6GV8IocgS2WwWSVpbdC1ms4iSzOLiwtrfZRm/Z5Fw
      IoMkiWSzWWRZefA6WVaQ/8HPKtuLvGoBBI2OcovIUiBAQleAQysQXhrn0q0BDEUN7K/U0ju1
      QllNC7GVOd7xehBcNVRYUxSaLFw8exnBYqGgugVLdIaReT9Fte1Y4xMsxvTsP3yMCre66+R2
      Iq9aABAo3FHB9NAIhUVr5QxX/GEqKitI+VfxRRLsP/4cuxvKsZfW8sJzJymyvDciUtbQzukT
      J7EKIeaWQ5TtqMRpNVBRVUeBRU8oGt26S1PZEvLKAAabDYfVhdWgx11SgstuwWG3EI2lKC0v
      pbKqkoHrlxiY9GC32UDQYrNZsFrt6PU67DYLglaL1V5E684qIuEwikZHJpUgmRGxmJ9+SUCV
      3EbNA6wTURQ5P/xzYno1CH4WUA2wTkRRxOdfoaAw9xbJrwX0Mjpd7k3yk6S1ulBabW51OvIq
      CM4VdBo9Jl3uBcsPMsG6HMwEC7mZCc4tNXnCz3rPMp9Y3moZ70Ph/japQm49ZSF3F8XnlQHS
      UT+zywHMdjflhTYyaLEYNv8S7s0PcHWha9PfV+Xpk3uPikcQmJomrtPimR1mdnKGhYA6bKny
      0cirFkDQGKmsqyMpRUgk0ozfu8F4KsOeFz7JSv/brESyVLUdJD3XjT+hYCyqo71Uy92RGSzu
      SqrMKQbmfNS2dNJS/cFTKFS2F3llAFkKc+PcOSrL6tlVZoCSSpo0C/T4Y2DZwctHyrlzewmz
      s4znj7QyNDrO5OAIMdmEHI9jKXYgsEIimdzqS1HJEfKqC6QzFXH65Zc52NGITqfDqNMiaA1Y
      LDaIL3Dm7A1sFSWYDWsVIQwGIzvqq9FKMkajkawoIigK2YeUe1fZfqh5gHUiiiJ/+q3/Qw2C
      nxFUA6wTURTpmehDMeZe46koMrKce9sQAcjyWqur0eSWNnWTvHWiKAqiKObkskNFuZ8HyLGN
      6EDdJO+ZQVEUJEnKuYwmrH3J1qZC5J42SVprAXKtdcotO6p8ZHIt05rrqC2AyrZGbQFUtjWq
      AZ6QeNBDX/8IiYxEKhwmDSSiAWIpcdM0xALL9HR3MzgxjyxnmRrpZ3o5gCKlCEdTKEoWny+4
      aXoAFDnL0twc0dTalrMrc2MMjc8hKZCKrNLXN0A0LZEMh8kA0bCfZGZz8jKylGF+ZpZEVkKR
      JcYHu1UDPAlKNs7A8Awuq0Tv0BzBuTlCmTjDw9NodJt3S33Lc1iLq6goKSA4PYgfB/6ZIVZD
      fuY8EeaG7xHDsGl6ABLBFZZ8AcKxBHJsnsGFDLrUMhPzKwwOjOFymem5N0Rgbo5wMsTo+CKa
      TarSHVn1sOxdJZ7KIIkRVkNqC/BESOkMluISqutaMYl+RCnClbcuUtjYhmUTDRAN+Bgd6mc1
      miEQVmhprqGyqoRUOMFU31Wm405qize3Bqq1cAd15W40QMIXZEdrC9XVO8lEZhGcFVRV12PW
      psim/Vy+cJ2KpmaMm7RIxlVaTVWJE0EAORNmdmZONcCTIGgFUsk0ohhHUkxotQ4OHd3NysIC
      m1dZRaHl0Mt86qWTLIwPoCNLNCWSTibRGvXUtx/ClFwhnpU3S9D7MJg0xCIJMpk4Gr0dKRlH
      lERkWUBvLGR/ZyPeJe8m3rP30Bkr+NwXf101wJOgNdlxE+Hc+eu4q6sxms04i2qoMGfwhjdr
      op3E4sQAFy5cxugqY8fOGgavnGfGD4VuO2aThQMHWhgfn90kPWsEFka5fqebOzduErBUk528
      yc2+aSqqGym1pbhw9jyO8nr0ZjNFFY24lAiBeHpTtHmn+7nd08uNK9fwBla5/vYFdRhUZXuj
      tgAq2xrVACrbGtUAKtsa1QAq2xrVACrbGtUAKtsa1QAq2xrVACrbGtUAKtsa1QAq2xrVACrb
      GtUAKtsa1QAq25r/H05fb9Prt6rgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales and Profit by sub-category and products ' width='192'>
      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
      PJkVRsvpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales and proit by region' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='scatter plot' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
